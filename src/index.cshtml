@using System.Configuration;
@using System.Web.Caching;
@{
	MarkdownPage page = PageSystem.GetCurrentPage(Request);

	Page.Title = PageSystem.GetTitle(page);
	Page.Description = page.Description;
	Page.Keywords = page.Keywords;
	Page.Theme = ConfigurationManager.AppSettings["theme"];

	Layout = "~/themes/" + Page.Theme + "/_layout.cshtml";

	if (!Request.IsLocal)
	{
		Response.Cache.SetValidUntilExpires(true);
		Response.Cache.SetCacheability(HttpCacheability.ServerAndPrivate);
		Response.Cache.VaryByParams["path"] = true;
		Response.AddCacheDependency(new CacheDependency(Server.MapPath(ConfigurationManager.AppSettings["pageFolder"] + page.FileName)));
		Response.AddCacheDependency(new CacheDependency(Server.MapPath("~/")));
		Response.AddCacheDependency(new CacheDependency(Server.MapPath("~/themes/" + Page.Theme)));
		Response.Cache.SetLastModifiedFromFileDependencies();
	}

	WebPageHttpHandler.DisableWebPagesResponseHeader = true;
	PageSystem.SetConditionalGetHeaders(page.DateModified.ToLocalTime(), Context);
}

@RenderPage("themes/" + Page.Theme + "/page.cshtml", page)